CREATE TABLE IF NOT EXISTS Organizations (
  id INT AUTO_INCREMENT PRIMARY KEY,
  organizationName VARCHAR(255) NOT NULL UNIQUE,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS Users (
  id INT AUTO_INCREMENT PRIMARY KEY,
  email VARCHAR(255) NOT NULL UNIQUE,
  pass VARCHAR(255) NOT NULL,
  organizationId INT NOT NULL,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (organizationId) REFERENCES Organizations(id)
);

CREATE TABLE IF NOT EXISTS Repos (
  id INT AUTO_INCREMENT PRIMARY KEY,
  repoName VARCHAR(255) NOT NULL,
  organizationId INT NOT NULL,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (organizationId) REFERENCES Organizations(id),
  CONSTRAINT uniqueRepoName UNIQUE (organizationId, repoName)
);

CREATE TABLE IF NOT EXISTS Branches (
  id INT AUTO_INCREMENT PRIMARY KEY,
  branchName VARCHAR(255) NOT NULL,
  isPrimary BOOLEAN NOT NULL,
  repoId INT NOT NULL,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (repoId) REFERENCES Repos(id),
  CONSTRAINT uniqueBranchName UNIQUE (repoId, branchName)
);

CREATE TABLE IF NOT EXISTS TestReports (
  id INT AUTO_INCREMENT PRIMARY KEY,
  resultTime DATETIME NULL,
  duration DOUBLE NULL,
  totalTests INT NULL,
  totalFailures INT NULL,
  totalErrors INT NULL,
  totalSkipped INT NULL,
  branchId INT NULL,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (branchId) REFERENCES Branches(id)
);

CREATE TABLE IF NOT EXISTS TestSuites (
  id INT AUTO_INCREMENT PRIMARY KEY,
  suiteName VARCHAR(255) NOT NULL,
  duration DOUBLE NULL,
  totalTests INT NULL,
  totalFailures INT NULL,
  totalErrors INT NULL,
  totalSkipped INT NULL,
  testReportId INT NULL,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (testReportId) REFERENCES TestReports(id)
);

CREATE TABLE IF NOT EXISTS TestCases (
  id INT AUTO_INCREMENT PRIMARY KEY,
  caseName VARCHAR(255) NOT NULL,
  className VARCHAR(255) NOT NULL,
  duration DOUBLE NULL,
  result ENUM('success', 'failure', 'error', 'skipped') NOT NULL,
  failureMessage VARCHAR(255),
  failureType VARCHAR(255),
  stackTrace TEXT,
  testSuiteId INT NOT NULL,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (testSuiteId) REFERENCES TestSuites(id)
);

CREATE TABLE IF NOT EXISTS CoverageReports (
  id INT AUTO_INCREMENT PRIMARY KEY,
  resultTime DATETIME NOT NULL,
  branchRate DOUBLE NULL,
  lineRate DOUBLE NULL,
  totalLines INT NULL,
  validLines INT NULL,
  complexity DOUBLE NULL,
  branchId INT NULL,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (branchId) REFERENCES Branches(id)
);

CREATE TABLE IF NOT EXISTS CoverageFiles (
  id INT AUTO_INCREMENT PRIMARY KEY,
  fileName VARCHAR(255) NOT NULL,
  branchRate DOUBLE NULL,
  lineRate DOUBLE NULL,
  coverageReportId INT NOT NULL,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (coverageReportId) REFERENCES CoverageReports(id)
);